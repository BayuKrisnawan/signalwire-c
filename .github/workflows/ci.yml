name: CI

on:
  push:
    branches:
      - "*"
      - "**"

jobs:
  scan_build:
    runs-on: ubuntu-latest-16-cores
    container:
      image: debian:buster
    steps:
      - run: mkdir -p /signalwire-c && cd /signalwire-c
      - name: Checkout
        uses: actions/checkout@v3
      - name: clone libks
        uses: actions/checkout@v3
        with:
          repo: signalwire/libks
          path: ./libks
      - run: ls -al && ls -al ./libks
      # - id: scan_build
      #   run: /sw/src/modules/mod_com_g729/scan_build.sh
      # - name: Tar logs
      #   id: tar
      #   if: failure()
      #   env:
      #     COMPILATION_FAILED: ${{ steps.scan_build.outputs.COMPILATION_FAILED }}
      #     BUGS_FOUND: ${{ steps.scan_build.outputs.BUGS_FOUND }}
      #   run: |
      #     cd /sw/src/modules/mod_com_g729
      #     ls -l
      #     if [ "true" -eq $COMPILATION_FAILED ]; then
      #       tar czvf /sw/scan-build-result.tar.gz ./scan-build-result.txt;
      #       echo "ARTIFACT_PATH=/sw/scan-build-result.tar.gz" >> $GITHUB_OUTPUT;
      #       echo "ARTIFACT=scan-build-result" >> $GITHUB_OUTPUT;
      #     fi
      #     if [ "true" -eq $BUGS_FOUND ]; then
      #       tar czvf /sw/reports.tar.gz $REPORT;
      #       echo "ARTIFACT_PATH=/sw/reports.tar.gz" >> $GITHUB_OUTPUT;
      #       echo "ARTIFACT=reports" >> $GITHUB_OUTPUT;
      #     fi

      # - name: Upload artifacts
      #   if: failure()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ steps.tar.outputs.ARTIFACT }}-${{ github.sha }}-${{ github.run_id }}
      #     path: ${{ steps.tar.outputs.ARTIFACT_PATH }}
      #     retention-days: 5
      # - name: notify slack
      #   if: failure()
      #   uses: signalwire/actions-template/.github/actions/slack@main
      #   with:
      #     CHANNEL: CCS2AV2H2
      #     MESSAGE: Scan-build ${{ github.repository }} > <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_id }}>.\n ${{ steps.scan_build.outputs.MESSAGE }}}.\nPlease check the results.
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL  }}
      
    